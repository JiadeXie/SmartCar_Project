C51 COMPILER V9.60.0.0   BT                                                                02/28/2023 18:25:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BT
OBJECT MODULE PLACED IN .\Objects\bt.obj
COMPILER INVOKED BY: E:\Software\C51\C51\BIN\C51.EXE source\bluetooth\bt.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\source;.\so
                    -urce\echo;.\source\public;.\source\display;.\source\motor;.\source\servo;.\source\ir_trace;.\source\bluetooth;.\source\m
                    -ain;.\source\ir_avoidance) DEBUG OBJECTEXTEND PRINT(.\Listings\bt.lst) TABS(2) OBJECT(.\Objects\bt.obj)

line level    source

   1          #include "bt.h"
   2          #include "echo.h"
   3          #include "IR_Trace.h"
   4          #include "avoid.h"
   5          
   6          uchar SEND_DAT;
   7          uchar RECE_DAT;
   8          
   9          unsigned char code ch1[]="收到指令，";
  10          unsigned char code ch2[]="前进！";
  11          unsigned char code ch3[]="后退！";
  12          unsigned char code ch4[]="左转！";
  13          unsigned char code ch5[]="右转！";
  14          unsigned char code ch6[]="停！";
  15          unsigned char code ch7[]="进入红外循迹模式！";
  16          unsigned char code ch8[]="进入红外避障模式！";
  17          unsigned char code ch9[]="进入超声波避障模式！";
  18          
  19          
  20          void bt(void)
  21          {
  22   1        uart_init();  //串口初始化
  23   1        motor_timer0_init();  //电机初始化
  24   1        while(1)
  25   1        {
  26   2          switch(RECE_DAT)
  27   2          {
  28   3            case 'a':forward();break;  //前进
  29   3            case 'b':back();break;  //后退
  30   3            case 'c':left();break;  //左转
  31   3            case 'd':right();break;  //右转
  32   3            case 'e':stop();break;  //停
  33   3            case 'f':ir_trace();break;  //红外循迹  
  34   3            case 'g':ir_avoid();break;  //红外避障
  35   3            case 'h':echo_avoid();break;  //超声波避障
  36   3          }
  37   2        }
  38   1      }
  39          
  40          void uart_init(void)
  41          {
  42   1        SCON=0X50; //设置为串口工作方式1，允许串口接收
  43   1        PCON=0X00; //波特率不加倍
  44   1        TMOD&=0X0F;
  45   1        TMOD|=0X20;//设置计时器1为8位自动重装模式
  46   1        TH1=253;   //波特率设置为9600
  47   1        TL1=253;   
  48   1        PS=1;      //设置串口中断优先级为高
  49   1        EA=1;      //打开全局中断
  50   1        ET1=0;     //关闭定时器1中断
  51   1        ES=1;      //打开串口中断
  52   1        TR1=1;     //打开计时器1
  53   1      }
C51 COMPILER V9.60.0.0   BT                                                                02/28/2023 18:25:48 PAGE 2   

  54          
  55          void uart_send_byte(uchar ch)
  56          {
  57   1        SBUF=ch;
  58   1        while(!TI);
  59   1        TI=0;
  60   1      }
  61          
  62          void uart_send_string(unsigned char* pt1,unsigned char* pt2)
  63          {
  64   1        while(*pt1!='\0')
  65   1        {
  66   2          uart_send_byte(*pt1);
  67   2          pt1++;
  68   2        }
  69   1      
  70   1        while(*pt2!='\0')
  71   1        {
  72   2          uart_send_byte(*pt2);
  73   2          pt2++;
  74   2        }
  75   1      
  76   1      }
  77          
  78          void uart_rece_byte(void) interrupt 4
  79          {
  80   1        if(RI==1)
  81   1        {
  82   2          RECE_DAT=SBUF;
  83   2          RI=0;
  84   2        }
  85   1      
  86   1      //  uart_send_byte(RECE_DAT);
  87   1      
  88   1        switch(RECE_DAT)
  89   1        {
  90   2          case 'a':uart_send_string(ch1,ch2);break;  //前进
  91   2          case 'b':uart_send_string(ch1,ch3);break;  //后退
  92   2          case 'c':uart_send_string(ch1,ch4);break;  //左转
  93   2          case 'd':uart_send_string(ch1,ch5);break;  //右转
  94   2          case 'e':uart_send_string(ch1,ch6);break;  //停
  95   2          case 'f':uart_send_string(ch1,ch7);break;  //红外循迹 
  96   2          case 'g':uart_send_string(ch1,ch8);break;  //红外避障
  97   2          case 'h':uart_send_string(ch1,ch9);break;  //超声波避障
  98   2        }
  99   1      
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =    103    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
